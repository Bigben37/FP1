(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     41218,        801]
NotebookOptionsPosition[     40233,        765]
NotebookOutlinePosition[     40570,        780]
CellTagsIndexPosition[     40527,        777]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.621844855854296*^9, 3.621844872308702*^9}, {
  3.621844912062986*^9, 3.621844913017854*^9}}],

Cell[BoxData[
 RowBox[{"<<", "HypothesisTesting`"}]], "Input",
 CellChangeTimes->{{3.621662845857034*^9, 3.621662845872722*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DoF", "=", "1374"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]2", "=", "1400"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]2", "/", "DoF"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"ChiSquareDistribution", "[", "DoF", "]"}], ",", "x"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "DoF"}]}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Chi]2", ",", "DoF", ",", 
        RowBox[{"DoF", "-", "2"}]}], "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"pVall", "=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"ChiSquareDistribution", "[", "DoF", "]"}], ",", "x"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Chi]2"}], "}"}]}], "]"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"pValr", "=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"ChiSquareDistribution", "[", "DoF", "]"}], ",", "x"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "\[Chi]2", ",", "\[Infinity]"}], "}"}]}], "]"}], "//",
    "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"ChiSquarePValue", "[", 
  RowBox[{"\[Chi]2", ",", "DoF"}], "]"}]}], "Input",
 CellChangeTimes->{{3.621662850562732*^9, 3.621662907585441*^9}, {
   3.621674182474967*^9, 3.621674186505104*^9}, {3.621674254812095*^9, 
   3.621674262704345*^9}, {3.621674558101384*^9, 3.621674566600337*^9}, 
   3.621674605529621*^9, {3.62167509643198*^9, 3.621675105127899*^9}, {
   3.621675202155292*^9, 3.621675202351387*^9}, 3.621675234942244*^9, {
   3.621675286288778*^9, 3.621675308839148*^9}, {3.621675606483576*^9, 
   3.621675613095496*^9}, 3.621677641605638*^9, {3.621677679361932*^9, 
   3.621677684990182*^9}, {3.621677763834474*^9, 3.621677810380654*^9}, {
   3.62184346310123*^9, 3.62184348138655*^9}, {3.621843595027081*^9, 
   3.62184364945349*^9}, {3.62184368831473*^9, 3.621843705254079*^9}, {
   3.621843736198979*^9, 3.621843788012141*^9}, {3.621844084221642*^9, 
   3.621844107921983*^9}, {3.621844142316782*^9, 3.621844169167076*^9}, {
   3.62184456776934*^9, 3.621844578988594*^9}, {3.621844610781546*^9, 
   3.621844714832991*^9}, {3.621844918949601*^9, 3.621844930812921*^9}, {
   3.621847208191432*^9, 3.621847242479393*^9}, {3.621847312608817*^9, 
   3.62184731300527*^9}, {3.6230553165506687`*^9, 3.623055329171822*^9}, 
   3.623056101203623*^9, {3.623056563524213*^9, 3.623056564760982*^9}, {
   3.623056802563456*^9, 3.6230568059327374`*^9}}],

Cell[BoxData["1.0189228529839884`"], "Output",
 CellChangeTimes->{{3.621662858150295*^9, 3.621662908648996*^9}, {
   3.621674184076726*^9, 3.621674186938192*^9}, 3.621674257029749*^9, 
   3.621674567586918*^9, 3.621674605929978*^9, 3.62167512242486*^9, 
   3.621675162360107*^9, {3.621675202725281*^9, 3.62167523802135*^9}, {
   3.621675288875897*^9, 3.621675311347663*^9}, {3.621675607310617*^9, 
   3.621675613592596*^9}, {3.621677642628686*^9, 3.621677645518979*^9}, 
   3.621677747420927*^9, {3.621677785367042*^9, 3.621677810960506*^9}, {
   3.621843466133658*^9, 3.621843511648658*^9}, {3.621843595724424*^9, 
   3.621843649803026*^9}, {3.621843696642207*^9, 3.621843705841265*^9}, {
   3.621843741642521*^9, 3.621843788382164*^9}, {3.621844086332032*^9, 
   3.62184410832903*^9}, {3.621844142801967*^9, 3.621844169680969*^9}, {
   3.621844568351131*^9, 3.621844579734182*^9}, {3.621844614663877*^9, 
   3.621844715188318*^9}, {3.621844919609394*^9, 3.621844931109871*^9}, 
   3.621846788173719*^9, 3.621847213036817*^9, 3.621847243102608*^9, 
   3.621847314193792*^9, 3.623055330632538*^9, 3.623056103404913*^9, 
   3.623056565453306*^9, 3.623056807126128*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJw9kwk0lk/Yxt9EZFeWImu2FluLimemO6XsVLZChIRkLVkjIks8z6MsoZIs
pSx5tSlKIUUSyvLXQkJZ6hUhS9/7nfN9zTlz5vzO3DNn7uu6Rt7ZZ98RDgaD
0c6e/7t+31+4TfmowHbG/40S8wDi/vT3f+zYo+wdNv3nHz/IZXA7TvPC/3N/
zPH9FtOS/zhk6vqMwfTaf6yv+cREf1rnH99qMgncOW30j+V0PJ1yJe3/cawN
5z7qs+s/Rn1rTeLpY2CktXVWNMuaw/jQ6RVdHn4wE8GtX7hDXfDJr/DxkaYT
sE01aTj+dKU4p1ZbTUZQECiOKriPeCrIeIhbhssvD4PDXkZiUY3cihJ5x3Ju
+kTAWsvmh8/nLqk2enn1uCacgQt+s8Ob/J+tL7Xzzp5A0TA89CV+PIJb87pM
bOv40FkwJn06DflrN0TcNViMHsQCEncpUOEy2hyR834w1j0O7gk0L9dNNtzi
7ij0YhVKAPVaQ6nCJtlth8cdVskvPQ92TTEtFY05Oqe7Tikp3UsCfNrTdfpR
k67nSOwRz6okaA38++Md9VbX+m9qfmltEli/RBlJge901ZUqlHTakuDToDTV
PftJ96PvTyXzn0kwon+OfHGVpbudx0M5eG0yFKmpuGk2iBKMLQdVXl9JhkWx
J1TUKw8QI4YeR5cVJIPZN54bvl2HiE77oEKb4mQYUymokghzJsqi0lT6HiXD
EXONrLEIT+Jwc6vKVGcy8JnQh3x4Q4lnR4xV5ZeT8IPfhyXonEWUBB10d5Mk
4YO2dPnUzhwiM9Hjxi15Ehr+O9s9YX6d8L9zTlVbk4TnQWVvmWq3iEO1ae6h
W0jYe7SLL0CqjDDqyL/xFJNQf3RI6J4ok1CYf65qbEoCl/R6ct2jSkJQuM2d
siTB6wCsbsx+QvxR6Lvxzo4ExW0pl7NKnhEDm1lDki7s+jUrrNJE6olWA8Ya
J08SWDK4fFbgFVFtJ+SR70cCkeoVtLO6mSjylrn5PYgE7rzOmltyrUTaGbVv
GpEkhEs8bCpweEdEXyTWnDxHQtT8DkvZdV3E03ZJd5xMwmoD5USm+QdiTnSm
gDuVzVLOkRZCvcQ2q46vLVkk+C95+MKg6wsRmHpXMTOXhGZDK1tZsUGi/N0F
F5eb7P7c6wti2r8TP8T8c9eXkcDUq3vTte4Hsd7aonfyHgketO55/ZXjhHua
utyTKhLMBfwc6hdNEvnv+R3jakloFOUMHTk0TfSJD1/e20jC1XSWabTeHCFj
87JHspUE/lNlQ2FODGSXXijV30lCYq/Y195pDpTREXOw+BMJdcFi+v1TXKhd
wvVS4AAJ7Z//xP30WopEbPU6t4+y72te1cL0EEBmGXISSydI4DsZ8FR7kQhK
7Fywav1DgrZOtLBy4XLket771WsGBXfCN3gNM8VR1O0PHhs4KUi825tXri2J
cppMlqZzU/DAb6ClDWRQ9cijG7O8FPTYRWHhAHn0gX+dgZMgBR6DKPuyjCKa
W585WCtCQfFNJY95DRUkabr03BoxCiwFfV1H765FW48HKSevoCBy5pQZqlFH
1kmDdeNSFLgGOoUmlmuhE8XWR2xkKXj7Lf9Tod0mdOF1HedjBQoGvqa6OLtv
QeWjm/LklClw4CqJ7x3QQS0CeTtj1lDwZvHKLDyI0Zja8i/f1lOgITbD01+1
A/GbRUWZaVJwRDRSv8B+F1rrzZJnbqTg9fFtBfft9iCDZKcaiS0UcHw8+yK6
wQi5lbxxCtOhQJwLjeqXm6GYZszoRRSoDVo+Ukjdi/LGiq/q76Bgc77UJL+C
JXomKL29aBf7PSivZpbXBn1WP/9R0ICCtQnV16PsD6IFs9nwAGMKRK8e/PJR
8RBa5eMp3WlGgdbp1HFxncNIl+x6TOyjwLh1j4RViQs6WGpgf82Kgv5Pnj9O
BbuhoDf3Z7kOUGC0qaJasdADpf1QzvK0p2Dk0nPe6F3HUYVQms4bRwrib4x4
aZf5olYNru6NLhSEJX12aOUKQCzzE8EZbhQ8eZyyOv72SSTs+2XFvAcFOJG/
n6M0CKlT+x4cPk7BwvDF6R0rw5BJWY1NvS8FqXnBuq+nI5Bni+bU2hMUzN+s
y/dRj0JxP6+mkacoaB+quml66ywqFBbSngihYPkz7ZnrYedQvebpd7anKdgb
2hpsUJyA+i1GT1SdoWBrdpORu2Ey4vCzF1WIYesbqm5qq0EjObqRGRtHAXlL
TASfvoDwHZ39w4kU6BmIDnBIpiGHtzfHzUkKEgK1z1nwX0JhrBUpFSkUZGff
MJ1zzEaZInFaK9PY/Zg+5kwVzkEPtKZawi9R0BGn5fBQPRe93+vm25dNgf/a
pgbulDyU/eJVIZlDwTvjB5XukYXIGWl8IvIoaKTb5rXeFyFV5gXx74UU1Hfe
DVa4VoLGVKdN029RYPDGztch6A6quGIfs6uUghDdgMM6w0wUIlrzmFXO9uuU
MzeDeQ9BgtLElXsUBMuNdT/vfoi4GQnrTCrZ+c7lkf3rXYWaT445z1RRQH8/
+KKn+im6OLwvs6CGnV8z9ZP2fM/RwcP33+6vo2BXctpkd34dkuuQWrroJQVL
3vpkGGc0oAGTSChpYufLKcSta7QR3X7Wf8quhe0/tz/Jx3yD/LcalvK0U6A9
kMn6/ect2lpSPHC3g4LpaKVeGZd2tLB6mYzLfxTYnjRZeC3ZgWovBVoJf2Kf
93EU7lvXjRKE/jtf1cfW50XwV9drH5BFzPZazwEKAg0Yih3PPyPx2euzEt8p
yGwdb9z1uw/1+PJsrBulgNPuUXmpz1eUO+Dl6c+iwLdGrvLO1iHkYf/2muwk
BT7X+Rq/HBxGmq2bu5qmKUgq2Dky83kM/d6TKRwyx+7n6UUFv2Ms9LhqYY8K
g4ZWuFz0K+8XitroEtG+mIY4ve4OT8XfyODmi3tnuGnYX9PbsGx8GgnKrh9T
56NB+GeurajEHGq/SCn1CNLwpneb1ZXLf1Em76R9/DIarFkDVyIbFmGnyAMX
tcVpqM7+0TuwsBgr/65q/LKShvKul6qzQUvwyDGFxbQ0DX57hMeC8VJc3hur
g+Vp6G++qzJlw4+DbIb9hhVpGNq0OWCiWQjj1+Y3M1RpmPK5VT73XgRz7qz4
rL+ehqftuhI2DFHc+GDFil8aNBiqS7rOeYjjFPVw85yNNNjseuMvKLUS2+b1
xppuoUHG572fj9QqLCO5u/qPDg2J54iF9gBZ3E8WTRZiGk5b7DozliaPi7iE
1Kz0aEj/0ATLilZj39AAV47dNDC+JOlqzihhbVZHVqkhDTrymuGPE1TxnBvR
Zm9Kg+vTPo+2I+vws54cXt69NPRc0e4xTFHHcfu49O5b0vBYftLWkV8LmzV4
BLva0pA1XTluvWgjFsXNZSL2NNxZqVKkp7YZdzM3DFU70iBVJ1D0IXULzlmT
LuvlQsO1Yw2XA3boYLers9Yrj9JgzCGweEwbYTUxp+R6TxpuO4iaszDgiYTa
ugBvGgI4oy7sFdLDlYw183L+NGxx9FqtIrILRwYmbWo+SUNxugDDz3A33j3C
OhYaTINRRd/rwioDzO9sfV01nK0XCstuCDDGrR2V3e8i2f4t9CY7+ZvhDFPZ
ZdFnaeBfE1hp8tkCH3oebagZRwPPQDhzNXMfbnJtd2hKZNcXJumr3LbEOkuU
/N1Jdj4sLq3s7rDGNwpPxnJeoGHym6QGn+4BLGFYn5mTRsPccdvZ3912OPa7
eCmRSYP7ZKuXRdUhPJF49HnnZfa+xBNTpQkn7Kz2oOPENRo4zl/M2HvHGbc0
84wI59PQEC7c+P6SK8a+BxjFN2jw5XI8VXrHDd8WKRI1vM3WyzwzVG3eHUsy
/6h+LaWBL7TnK+PMMRxvaYzOMGnQrPhgtV3PG09PZu2Vvs/2w+Ena/N1X+yW
PnLkYSUNg8rxr54Y+uP2rSjEqprtf9j4hhmJE1ivOymZVUNDrlVxsLNIIC4L
/ZibVEfD+S0mbnXbgrCMtMb9NS9peFG3+5FOagg+Xx3RWNdEw1jrLzFN1XA8
69jy6XALDc61f7W8pyKw5yL5ifk2Gu5ennoldPYM7sz148nsoKH+LtExrBGN
K74u02r9SENGWheX/0IsVjjnou/dx9bTKkq0SyUeU6oVB3gHaDh6z0xld1Qi
XnjJ6V3wjYYiybKxepFkfPyYVZTeKPv/bs8XtD9O4R7+grSPP2m4F2jn+fUn
jY1KfheFTNBwiCNjA1faBazMSm8rn6Xho9+X5GUW6fhiytCg2V8amPKjG5Ye
u4Q5Nm2b+86RAiKsRW6lzCzs+y5e+NySFHjoLJx9We0K/hTYrbiaNwUeib8k
bLxzsHTYCZ42vhTwKJN5vWfVNfw/LJcVaA==
     "]], LineBox[CompressedData["
1:eJwVl3c8lu/7xq1CST+SlZGSyENGUdzX3ZmEVKiUysjIViSkUMrIiIjSPeye
CEkZDetjU0ZmZEtaIkpPGfk+v7+u1/m6rj/O430cxx+XnL3nUUcuDg4OSU4O
jv8/n+XYSmXrEOBaINNiKJWOc/Cu5l2PEZAXfcULe5iG59caU/l7CAgNLzQP
k07FrW9EbTfaR4BAddenDKFkXABe14waEBC/INnySoHCS5f4TwYYE6B3+cWW
rtME7lZ6YFLEhADDZzM+wnlJeKNWk4jRcQI8xavlhVIT8Uu/+B6NniQgiONx
KIEScIVnRijAioDhy8W6XbPxeJdnRLuILQHXd8l+tS6Pw0NUGh3zHQhYZDWe
bdO+jWt84503dGa/b6dwD8kYfCTbMHbUjYCiLno7bIzGcfmGEhFvAuKUJE1+
3LqJ3/U/b+zlS4DL7TUSr1aF45PN64fe+BNwLdD9+MG0UHyfXPmFrYEEaIY1
/USHQnDS9+yKkGsEHL4317tnzQ18pmk1MXSDgCGPS51CY8G4kUwhQyecgN6G
J7prEq7hrHpO85lbBNwx0xGdTgrATTY8+nQojgBzeUtWV9Nl/KGnWUB2AgG8
c3OnesX98aUaliBPEgFhL+IctEP8cHPx1IwzJJv/3h2rjXl98VwPA63SZPY8
51YUnHkR56r63iSaTgBXhdSA/QlvvMAVm2nJImC/nJWO85wnzlvxIVQpl4DR
HJ3Tmp3ncBvhaPGwfAI275z4uL3LHS920sgbeUrAfF1W9PbfrrhAad8erJiA
Lg2h4S3aLrjD2uudSS8I0BHkDtly1wl/5aDo/LOUgJ4dyh42go64i8Cl2Jxq
ApKu9eXUHrTHK21lNq2sJ2Cq/b14j4AdLlpcV2zXRMDRhUqt5roz+Dn+cwfK
mwl489XPBghrvNZaZFD8LdtPoY2TEfGW+IZnpV4+nQSwNhgIHM47hXuvdOB5
20OAgbzu3ZOfLHC5J0+Vbw4SYB3b90m2xBz35z5VOTZCQH5KhKy4wTH8rQXH
MXycgHZ11pfmqSP41rysCeITAdphFXWZ+Wb4VQ7TK3NfCdD6EH1Rm88U7zb/
vebIFAEpNQ2ZSf2HcMaj5PS8GQKO3TCzr+kyxt8fmWx0+EPA7qWhkDJVQ1z9
YYJV5QIB7mv6elZF78cj5nV+SC6zeQ2PfZfj0ceHTcZC/LhI6P96x0vivh6u
lRkp1rGChH/uh7Yq7t+Lx7DUclX4SYhWyV+fwQ/4+MFePFKAhKo+CfvvDQi/
80vBCdaRMLginNWXvRv/YtT6lxIlIfTHR4O3bdo4JPvGsCRIaEp+sWJATAtP
mpGSOyZNglOyVnvl1R341P7aovyNJMiNLjx14NLE95PuRqvkSdBxeVzbkaaO
01PCA45bSfjzwWTl7pNq+MEkO25pVRI+H3cFJ1EGnvGNL8lfnQTRTLtUe95t
+Pyegm1dO0gobR9Nm5ZWxI8kWlRs30WCQzB/jo+FAp79+d+RaF0SEjWuB4U9
lceXsYcfJ3ASrCKf2Q8rbcZPxB++rKdHAkflo8tOFXI4jw6d9teIhMreXVuD
XWRw7vFdzcmHSPD01HbjmtuAc8V2s/aakXD6iqVFwzMJnHOX9+aJYyQkeyx4
rEkRwznGBE2jLEiY5raXPV24Hl+Ozr2iakmCeVBes8/0OvzfTqOHHTYk7C0r
57M3FcYXIq8vSTqREI5JSJQPC+LzmjJKla4kSMw+Ul5pIYD/GXxl7nCOhIVr
T4p1uFbhrJsWwbwXSOhJPLNgOsiL/1b/lZvrQ8LuADubyPEV+Fx/3DtTfxJO
cXvleovw4L/CVLh/BZBQclq79b0rFz7b53QaCyHhJlZ2XPnnPzQTwh0+Ek5C
eR+v3wnrRfRDJe1paBQJGS0XNa4s/UXT77BBxVgS6vk0hQ63sdDU9T6+lngS
xgaW979vnUPflf12XLhLAr/4kk3An59oslvYdj1BwvPrCk4dRrPoq9Kh59Zp
JDCsOtd/yZhCXzo/j3E+YO+3OV/1Kt8k+hwUJvgwiwTC/V27G/ML+rR1k45x
Llt/E31T0/cTmmivcJzKJ8H2zUW95xc/oo8BlvF3npGQMizpp5j8AY1v+VOm
VULC1VTzpyunRtFYW+Ln9y9JyA7/UyDuMIJGL6uLXCsngT7m2tAyO4hGNrfu
2VxFwo+0j3keVv1oqMXNvaGWhNvfKrn5/vWiwUu8Se6NJLA4NMY5OnvQgNyD
6rXNJNxymAsRe9eF+t/AVGEbCVzU6kaHlZ3ove+gxMlOEjLdXJxMrNtRn+yV
/Ys97D7ocEiuf9qGeptEL6S9Z+exfppv49dm9O5iIa0/xM57/+soZdvXqEfa
rPHzKJvXZ6tpCcFG1N0w+fPWRxJau+yzd03Xoa4LkbLqX0iQ7hqs1l6uQZ0b
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{1400, 1374, 1372}, {}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2748}, {0., 5.099317610299879*^-7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.621662858150295*^9, 3.621662908648996*^9}, {
   3.621674184076726*^9, 3.621674186938192*^9}, 3.621674257029749*^9, 
   3.621674567586918*^9, 3.621674605929978*^9, 3.62167512242486*^9, 
   3.621675162360107*^9, {3.621675202725281*^9, 3.62167523802135*^9}, {
   3.621675288875897*^9, 3.621675311347663*^9}, {3.621675607310617*^9, 
   3.621675613592596*^9}, {3.621677642628686*^9, 3.621677645518979*^9}, 
   3.621677747420927*^9, {3.621677785367042*^9, 3.621677810960506*^9}, {
   3.621843466133658*^9, 3.621843511648658*^9}, {3.621843595724424*^9, 
   3.621843649803026*^9}, {3.621843696642207*^9, 3.621843705841265*^9}, {
   3.621843741642521*^9, 3.621843788382164*^9}, {3.621844086332032*^9, 
   3.62184410832903*^9}, {3.621844142801967*^9, 3.621844169680969*^9}, {
   3.621844568351131*^9, 3.621844579734182*^9}, {3.621844614663877*^9, 
   3.621844715188318*^9}, {3.621844919609394*^9, 3.621844931109871*^9}, 
   3.621846788173719*^9, 3.621847213036817*^9, 3.621847243102608*^9, 
   3.621847314193792*^9, 3.623055330632538*^9, 3.623056103404913*^9, 
   3.623056565453306*^9, 3.623056807201332*^9}],

Cell[BoxData["0.69342582949583349987257590620318143815`15.494559789232147"], \
"Output",
 CellChangeTimes->{{3.621662858150295*^9, 3.621662908648996*^9}, {
   3.621674184076726*^9, 3.621674186938192*^9}, 3.621674257029749*^9, 
   3.621674567586918*^9, 3.621674605929978*^9, 3.62167512242486*^9, 
   3.621675162360107*^9, {3.621675202725281*^9, 3.62167523802135*^9}, {
   3.621675288875897*^9, 3.621675311347663*^9}, {3.621675607310617*^9, 
   3.621675613592596*^9}, {3.621677642628686*^9, 3.621677645518979*^9}, 
   3.621677747420927*^9, {3.621677785367042*^9, 3.621677810960506*^9}, {
   3.621843466133658*^9, 3.621843511648658*^9}, {3.621843595724424*^9, 
   3.621843649803026*^9}, {3.621843696642207*^9, 3.621843705841265*^9}, {
   3.621843741642521*^9, 3.621843788382164*^9}, {3.621844086332032*^9, 
   3.62184410832903*^9}, {3.621844142801967*^9, 3.621844169680969*^9}, {
   3.621844568351131*^9, 3.621844579734182*^9}, {3.621844614663877*^9, 
   3.621844715188318*^9}, {3.621844919609394*^9, 3.621844931109871*^9}, 
   3.621846788173719*^9, 3.621847213036817*^9, 3.621847243102608*^9, 
   3.621847314193792*^9, 3.623055330632538*^9, 3.623056103404913*^9, 
   3.623056565453306*^9, 3.6230568111407223`*^9}],

Cell[BoxData["0.30657417050408645851563077290973419706`15.653559774527023"], \
"Output",
 CellChangeTimes->{{3.621662858150295*^9, 3.621662908648996*^9}, {
   3.621674184076726*^9, 3.621674186938192*^9}, 3.621674257029749*^9, 
   3.621674567586918*^9, 3.621674605929978*^9, 3.62167512242486*^9, 
   3.621675162360107*^9, {3.621675202725281*^9, 3.62167523802135*^9}, {
   3.621675288875897*^9, 3.621675311347663*^9}, {3.621675607310617*^9, 
   3.621675613592596*^9}, {3.621677642628686*^9, 3.621677645518979*^9}, 
   3.621677747420927*^9, {3.621677785367042*^9, 3.621677810960506*^9}, {
   3.621843466133658*^9, 3.621843511648658*^9}, {3.621843595724424*^9, 
   3.621843649803026*^9}, {3.621843696642207*^9, 3.621843705841265*^9}, {
   3.621843741642521*^9, 3.621843788382164*^9}, {3.621844086332032*^9, 
   3.62184410832903*^9}, {3.621844142801967*^9, 3.621844169680969*^9}, {
   3.621844568351131*^9, 3.621844579734182*^9}, {3.621844614663877*^9, 
   3.621844715188318*^9}, {3.621844919609394*^9, 3.621844931109871*^9}, 
   3.621846788173719*^9, 3.621847213036817*^9, 3.621847243102608*^9, 
   3.621847314193792*^9, 3.623055330632538*^9, 3.623056103404913*^9, 
   3.623056565453306*^9, 3.623056816292457*^9}],

Cell[BoxData[
 RowBox[{"OneSidedPValue", "\[Rule]", "0.30657417050406455`"}]], "Output",
 CellChangeTimes->{{3.621662858150295*^9, 3.621662908648996*^9}, {
   3.621674184076726*^9, 3.621674186938192*^9}, 3.621674257029749*^9, 
   3.621674567586918*^9, 3.621674605929978*^9, 3.62167512242486*^9, 
   3.621675162360107*^9, {3.621675202725281*^9, 3.62167523802135*^9}, {
   3.621675288875897*^9, 3.621675311347663*^9}, {3.621675607310617*^9, 
   3.621675613592596*^9}, {3.621677642628686*^9, 3.621677645518979*^9}, 
   3.621677747420927*^9, {3.621677785367042*^9, 3.621677810960506*^9}, {
   3.621843466133658*^9, 3.621843511648658*^9}, {3.621843595724424*^9, 
   3.621843649803026*^9}, {3.621843696642207*^9, 3.621843705841265*^9}, {
   3.621843741642521*^9, 3.621843788382164*^9}, {3.621844086332032*^9, 
   3.62184410832903*^9}, {3.621844142801967*^9, 3.621844169680969*^9}, {
   3.621844568351131*^9, 3.621844579734182*^9}, {3.621844614663877*^9, 
   3.621844715188318*^9}, {3.621844919609394*^9, 3.621844931109871*^9}, 
   3.621846788173719*^9, 3.621847213036817*^9, 3.621847243102608*^9, 
   3.621847314193792*^9, 3.623055330632538*^9, 3.623056103404913*^9, 
   3.623056565453306*^9, 3.623056816309505*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"OneSidedPValue", "/.", 
    RowBox[{"ChiSquarePValue", "[", 
     RowBox[{"x", ",", "DoF"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"3", "DoF"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.6"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DoF", "-", "1"}], ",", "DoF", ",", "\[Chi]2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"pVall", ",", "pValr"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.621674454833513*^9, 3.621674454856943*^9}, {
  3.621674665779092*^9, 3.621674725703062*^9}, {3.621674776424703*^9, 
  3.62167479833437*^9}, {3.621675115297924*^9, 3.621675117676105*^9}, {
  3.621675245244216*^9, 3.621675273513349*^9}, {3.621677861083735*^9, 
  3.621677875875308*^9}, {3.621843523744157*^9, 3.621843569222088*^9}, {
  3.621844790099192*^9, 3.621844792581929*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ohVA
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{14, 15, 25}, {0.9500565663735716, 0.04994343362642837}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{514., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 44.99999908163265}, {0, 0.6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.621674461518162*^9, {3.621674666999007*^9, 3.621674680032081*^9}, {
   3.621674711764344*^9, 3.621674738970894*^9}, {3.621674782046443*^9, 
   3.621674798640552*^9}, {3.621675229144254*^9, 3.621675312516213*^9}, 
   3.621677647121479*^9, 3.621677747804622*^9, 3.621677876415221*^9, {
   3.62184352067495*^9, 3.621843571211479*^9}, 3.621844181725294*^9, 
   3.621844744018513*^9, 3.621844793377247*^9, 3.621846794684644*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Konfidenzintervalle f\[UDoubleDot]r 5 % und 1 % Signifikanzlevel", \
"Subsection",
 CellChangeTimes->{{3.621847138020274*^9, 3.621847185396475*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"\[Chi]2t", ">", "0"}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"ChiSquareDistribution", "[", 
           RowBox[{"DoF", "+", "0.001"}], "]"}], ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "\[Chi]2t", ",", "\[Infinity]"}], "}"}]}], "]"}]}],
      "]"}], "\[Equal]", "0.05"}], ",", "\[Chi]2t"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"\[Chi]2t", ">", "0"}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"ChiSquareDistribution", "[", 
           RowBox[{"DoF", "+", "0.0001"}], "]"}], ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "\[Chi]2t", ",", "\[Infinity]"}], "}"}]}], "]"}]}],
      "]"}], "\[Equal]", "0.01"}], ",", "\[Chi]2t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.62184688866401*^9, 3.621846941595846*^9}, {
  3.621847006234131*^9, 3.621847049136066*^9}, {3.621847097646061*^9, 
  3.621847119879071*^9}, {3.621847260331197*^9, 3.62184730638686*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \[NoBreak]\\!\\(NSolve\
\\)\[NoBreak], so some solutions may not be found; use Reduce for complete \
solution information. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \\\"NSolve::ifun\\\"]\\)\
\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.621847039234121*^9, 3.621847050905667*^9}, {
  3.621847102550825*^9, 3.621847120767697*^9}, {3.621847253511205*^9, 
  3.621847319045629*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Chi]2t", "\[Rule]", "30.144797669633185`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.621846883642744*^9, {3.621846926409533*^9, 3.621846946538575*^9}, 
   3.62184700915692*^9, {3.621847039236121*^9, 3.621847050907647*^9}, {
   3.621847102553815*^9, 3.621847120770018*^9}, {3.621847253513462*^9, 
   3.621847319047801*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \[NoBreak]\\!\\(NSolve\
\\)\[NoBreak], so some solutions may not be found; use Reduce for complete \
solution information. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \\\"NSolve::ifun\\\"]\\)\
\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.621847039234121*^9, 3.621847050905667*^9}, {
  3.621847102550825*^9, 3.621847120767697*^9}, {3.621847253511205*^9, 
  3.621847320009019*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Chi]2t", "\[Rule]", "36.19100716198328`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.621846883642744*^9, {3.621846926409533*^9, 3.621846946538575*^9}, 
   3.62184700915692*^9, {3.621847039236121*^9, 3.621847050907647*^9}, {
   3.621847102553815*^9, 3.621847120770018*^9}, {3.621847253513462*^9, 
   3.621847320011014*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 719},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 191, 3, 32, "Input"],
Cell[752, 25, 128, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[905, 31, 2789, 64, 165, "Input"],
Cell[3697, 97, 1167, 16, 32, "Output"],
Cell[4867, 115, 12430, 212, 218, "Output"],
Cell[17300, 329, 1211, 17, 32, "Output"],
Cell[18514, 348, 1209, 17, 32, "Output"],
Cell[19726, 367, 1209, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20972, 389, 1041, 25, 32, "Input"],
Cell[22016, 416, 14593, 248, 347, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36646, 669, 154, 2, 47, "Subsection"],
Cell[CellGroupData[{
Cell[36825, 675, 1295, 34, 143, "Input"],
Cell[38123, 711, 644, 13, 41, "Message"],
Cell[38770, 726, 393, 9, 32, "Output"],
Cell[39166, 737, 644, 13, 41, "Message"],
Cell[39813, 752, 392, 9, 32, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
