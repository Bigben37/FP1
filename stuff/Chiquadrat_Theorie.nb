(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     41585,        810]
NotebookOptionsPosition[     40599,        774]
NotebookOutlinePosition[     40937,        789]
CellTagsIndexPosition[     40894,        786]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.621844855854296*^9, 3.621844872308702*^9}, {
  3.621844912062986*^9, 3.621844913017854*^9}}],

Cell[BoxData[
 RowBox[{"<<", "HypothesisTesting`"}]], "Input",
 CellChangeTimes->{{3.621662845857034*^9, 3.621662845872722*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DoF", "=", "19"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]2", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]2", "/", "DoF"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"ChiSquareDistribution", "[", "DoF", "]"}], ",", "x"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "DoF"}]}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Chi]2", ",", "DoF", ",", 
        RowBox[{"DoF", "-", "2"}]}], "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"pVall", "=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"ChiSquareDistribution", "[", "DoF", "]"}], ",", "x"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Chi]2"}], "}"}]}], "]"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"pValr", "=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"ChiSquareDistribution", "[", "DoF", "]"}], ",", "x"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "\[Chi]2", ",", "\[Infinity]"}], "}"}]}], "]"}], "//",
    "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"ChiSquarePValue", "[", 
  RowBox[{"\[Chi]2", ",", "DoF"}], "]"}]}], "Input",
 CellChangeTimes->{{3.621662850562732*^9, 3.621662907585441*^9}, {
   3.621674182474967*^9, 3.621674186505104*^9}, {3.621674254812095*^9, 
   3.621674262704345*^9}, {3.621674558101384*^9, 3.621674566600337*^9}, 
   3.621674605529621*^9, {3.62167509643198*^9, 3.621675105127899*^9}, {
   3.621675202155292*^9, 3.621675202351387*^9}, 3.621675234942244*^9, {
   3.621675286288778*^9, 3.621675308839148*^9}, {3.621675606483576*^9, 
   3.621675613095496*^9}, 3.621677641605638*^9, {3.621677679361932*^9, 
   3.621677684990182*^9}, {3.621677763834474*^9, 3.621677810380654*^9}, {
   3.62184346310123*^9, 3.62184348138655*^9}, {3.621843595027081*^9, 
   3.62184364945349*^9}, {3.62184368831473*^9, 3.621843705254079*^9}, {
   3.621843736198979*^9, 3.621843788012141*^9}, {3.621844084221642*^9, 
   3.621844107921983*^9}, {3.621844142316782*^9, 3.621844169167076*^9}, {
   3.62184456776934*^9, 3.621844578988594*^9}, {3.621844610781546*^9, 
   3.621844714832991*^9}, {3.621844918949601*^9, 3.621844930812921*^9}, {
   3.621847208191432*^9, 3.621847242479393*^9}, {3.621847312608817*^9, 
   3.62184731300527*^9}}],

Cell[BoxData["1.3157894736842106`"], "Output",
 CellChangeTimes->{{3.621662858150295*^9, 3.621662908648996*^9}, {
   3.621674184076726*^9, 3.621674186938192*^9}, 3.621674257029749*^9, 
   3.621674567586918*^9, 3.621674605929978*^9, 3.62167512242486*^9, 
   3.621675162360107*^9, {3.621675202725281*^9, 3.62167523802135*^9}, {
   3.621675288875897*^9, 3.621675311347663*^9}, {3.621675607310617*^9, 
   3.621675613592596*^9}, {3.621677642628686*^9, 3.621677645518979*^9}, 
   3.621677747420927*^9, {3.621677785367042*^9, 3.621677810960506*^9}, {
   3.621843466133658*^9, 3.621843511648658*^9}, {3.621843595724424*^9, 
   3.621843649803026*^9}, {3.621843696642207*^9, 3.621843705841265*^9}, {
   3.621843741642521*^9, 3.621843788382164*^9}, {3.621844086332032*^9, 
   3.62184410832903*^9}, {3.621844142801967*^9, 3.621844169680969*^9}, {
   3.621844568351131*^9, 3.621844579734182*^9}, {3.621844614663877*^9, 
   3.621844715188318*^9}, {3.621844919609394*^9, 3.621844931109871*^9}, 
   3.621846788173719*^9, 3.621847213036817*^9, 3.621847243102608*^9, 
   3.621847314193792*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{25, 19, 17}, {}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 38}, {0., 0.06775085210275066}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.621662858150295*^9, 3.621662908648996*^9}, {
   3.621674184076726*^9, 3.621674186938192*^9}, 3.621674257029749*^9, 
   3.621674567586918*^9, 3.621674605929978*^9, 3.62167512242486*^9, 
   3.621675162360107*^9, {3.621675202725281*^9, 3.62167523802135*^9}, {
   3.621675288875897*^9, 3.621675311347663*^9}, {3.621675607310617*^9, 
   3.621675613592596*^9}, {3.621677642628686*^9, 3.621677645518979*^9}, 
   3.621677747420927*^9, {3.621677785367042*^9, 3.621677810960506*^9}, {
   3.621843466133658*^9, 3.621843511648658*^9}, {3.621843595724424*^9, 
   3.621843649803026*^9}, {3.621843696642207*^9, 3.621843705841265*^9}, {
   3.621843741642521*^9, 3.621843788382164*^9}, {3.621844086332032*^9, 
   3.62184410832903*^9}, {3.621844142801967*^9, 3.621844169680969*^9}, {
   3.621844568351131*^9, 3.621844579734182*^9}, {3.621844614663877*^9, 
   3.621844715188318*^9}, {3.621844919609394*^9, 3.621844931109871*^9}, 
   3.621846788173719*^9, 3.621847213036817*^9, 3.621847243102608*^9, 
   3.621847314386218*^9}],

Cell[BoxData["0.8394577786389317`"], "Output",
 CellChangeTimes->{{3.621662858150295*^9, 3.621662908648996*^9}, {
   3.621674184076726*^9, 3.621674186938192*^9}, 3.621674257029749*^9, 
   3.621674567586918*^9, 3.621674605929978*^9, 3.62167512242486*^9, 
   3.621675162360107*^9, {3.621675202725281*^9, 3.62167523802135*^9}, {
   3.621675288875897*^9, 3.621675311347663*^9}, {3.621675607310617*^9, 
   3.621675613592596*^9}, {3.621677642628686*^9, 3.621677645518979*^9}, 
   3.621677747420927*^9, {3.621677785367042*^9, 3.621677810960506*^9}, {
   3.621843466133658*^9, 3.621843511648658*^9}, {3.621843595724424*^9, 
   3.621843649803026*^9}, {3.621843696642207*^9, 3.621843705841265*^9}, {
   3.621843741642521*^9, 3.621843788382164*^9}, {3.621844086332032*^9, 
   3.62184410832903*^9}, {3.621844142801967*^9, 3.621844169680969*^9}, {
   3.621844568351131*^9, 3.621844579734182*^9}, {3.621844614663877*^9, 
   3.621844715188318*^9}, {3.621844919609394*^9, 3.621844931109871*^9}, 
   3.621846788173719*^9, 3.621847213036817*^9, 3.621847243102608*^9, 
   3.621847317047252*^9}],

Cell[BoxData["0.16054222136106833`"], "Output",
 CellChangeTimes->{{3.621662858150295*^9, 3.621662908648996*^9}, {
   3.621674184076726*^9, 3.621674186938192*^9}, 3.621674257029749*^9, 
   3.621674567586918*^9, 3.621674605929978*^9, 3.62167512242486*^9, 
   3.621675162360107*^9, {3.621675202725281*^9, 3.62167523802135*^9}, {
   3.621675288875897*^9, 3.621675311347663*^9}, {3.621675607310617*^9, 
   3.621675613592596*^9}, {3.621677642628686*^9, 3.621677645518979*^9}, 
   3.621677747420927*^9, {3.621677785367042*^9, 3.621677810960506*^9}, {
   3.621843466133658*^9, 3.621843511648658*^9}, {3.621843595724424*^9, 
   3.621843649803026*^9}, {3.621843696642207*^9, 3.621843705841265*^9}, {
   3.621843741642521*^9, 3.621843788382164*^9}, {3.621844086332032*^9, 
   3.62184410832903*^9}, {3.621844142801967*^9, 3.621844169680969*^9}, {
   3.621844568351131*^9, 3.621844579734182*^9}, {3.621844614663877*^9, 
   3.621844715188318*^9}, {3.621844919609394*^9, 3.621844931109871*^9}, 
   3.621846788173719*^9, 3.621847213036817*^9, 3.621847243102608*^9, 
   3.621847317960958*^9}],

Cell[BoxData[
 RowBox[{"OneSidedPValue", "\[Rule]", "0.1605422213610683`"}]], "Output",
 CellChangeTimes->{{3.621662858150295*^9, 3.621662908648996*^9}, {
   3.621674184076726*^9, 3.621674186938192*^9}, 3.621674257029749*^9, 
   3.621674567586918*^9, 3.621674605929978*^9, 3.62167512242486*^9, 
   3.621675162360107*^9, {3.621675202725281*^9, 3.62167523802135*^9}, {
   3.621675288875897*^9, 3.621675311347663*^9}, {3.621675607310617*^9, 
   3.621675613592596*^9}, {3.621677642628686*^9, 3.621677645518979*^9}, 
   3.621677747420927*^9, {3.621677785367042*^9, 3.621677810960506*^9}, {
   3.621843466133658*^9, 3.621843511648658*^9}, {3.621843595724424*^9, 
   3.621843649803026*^9}, {3.621843696642207*^9, 3.621843705841265*^9}, {
   3.621843741642521*^9, 3.621843788382164*^9}, {3.621844086332032*^9, 
   3.62184410832903*^9}, {3.621844142801967*^9, 3.621844169680969*^9}, {
   3.621844568351131*^9, 3.621844579734182*^9}, {3.621844614663877*^9, 
   3.621844715188318*^9}, {3.621844919609394*^9, 3.621844931109871*^9}, 
   3.621846788173719*^9, 3.621847213036817*^9, 3.621847243102608*^9, 
   3.621847317992933*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"OneSidedPValue", "/.", 
    RowBox[{"ChiSquarePValue", "[", 
     RowBox[{"x", ",", "DoF"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"3", "DoF"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.6"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DoF", "-", "1"}], ",", "DoF", ",", "\[Chi]2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"pVall", ",", "pValr"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.621674454833513*^9, 3.621674454856943*^9}, {
  3.621674665779092*^9, 3.621674725703062*^9}, {3.621674776424703*^9, 
  3.62167479833437*^9}, {3.621675115297924*^9, 3.621675117676105*^9}, {
  3.621675245244216*^9, 3.621675273513349*^9}, {3.621677861083735*^9, 
  3.621677875875308*^9}, {3.621843523744157*^9, 3.621843569222088*^9}, {
  3.621844790099192*^9, 3.621844792581929*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ohVA
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{14, 15, 25}, {0.9500565663735716, 0.04994343362642837}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{514., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 44.99999908163265}, {0, 0.6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.621674461518162*^9, {3.621674666999007*^9, 3.621674680032081*^9}, {
   3.621674711764344*^9, 3.621674738970894*^9}, {3.621674782046443*^9, 
   3.621674798640552*^9}, {3.621675229144254*^9, 3.621675312516213*^9}, 
   3.621677647121479*^9, 3.621677747804622*^9, 3.621677876415221*^9, {
   3.62184352067495*^9, 3.621843571211479*^9}, 3.621844181725294*^9, 
   3.621844744018513*^9, 3.621844793377247*^9, 3.621846794684644*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Konfidenzintervalle f\[UDoubleDot]r 5 % und 1 % Signifikanzlevel", \
"Subsection",
 CellChangeTimes->{{3.621847138020274*^9, 3.621847185396475*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"\[Chi]2t", ">", "0"}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"ChiSquareDistribution", "[", 
           RowBox[{"DoF", "+", "0.001"}], "]"}], ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "\[Chi]2t", ",", "\[Infinity]"}], "}"}]}], "]"}]}],
      "]"}], "\[Equal]", "0.05"}], ",", "\[Chi]2t"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"\[Chi]2t", ">", "0"}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"ChiSquareDistribution", "[", 
           RowBox[{"DoF", "+", "0.0001"}], "]"}], ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "\[Chi]2t", ",", "\[Infinity]"}], "}"}]}], "]"}]}],
      "]"}], "\[Equal]", "0.01"}], ",", "\[Chi]2t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.62184688866401*^9, 3.621846941595846*^9}, {
  3.621847006234131*^9, 3.621847049136066*^9}, {3.621847097646061*^9, 
  3.621847119879071*^9}, {3.621847260331197*^9, 3.62184730638686*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \[NoBreak]\\!\\(NSolve\
\\)\[NoBreak], so some solutions may not be found; use Reduce for complete \
solution information. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \\\"NSolve::ifun\\\"]\\)\
\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.621847039234121*^9, 3.621847050905667*^9}, {
  3.621847102550825*^9, 3.621847120767697*^9}, {3.621847253511205*^9, 
  3.621847319045629*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Chi]2t", "\[Rule]", "30.144797669633185`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.621846883642744*^9, {3.621846926409533*^9, 3.621846946538575*^9}, 
   3.62184700915692*^9, {3.621847039236121*^9, 3.621847050907647*^9}, {
   3.621847102553815*^9, 3.621847120770018*^9}, {3.621847253513462*^9, 
   3.621847319047801*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \[NoBreak]\\!\\(NSolve\
\\)\[NoBreak], so some solutions may not be found; use Reduce for complete \
solution information. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \\\"NSolve::ifun\\\"]\\)\
\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.621847039234121*^9, 3.621847050905667*^9}, {
  3.621847102550825*^9, 3.621847120767697*^9}, {3.621847253511205*^9, 
  3.621847320009019*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Chi]2t", "\[Rule]", "36.19100716198328`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.621846883642744*^9, {3.621846926409533*^9, 3.621846946538575*^9}, 
   3.62184700915692*^9, {3.621847039236121*^9, 3.621847050907647*^9}, {
   3.621847102553815*^9, 3.621847120770018*^9}, {3.621847253513462*^9, 
   3.621847320011014*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{814, 683},
WindowMargins->{{78, Automatic}, {18, Automatic}},
FrontEndVersion->"10.0 for Linux x86 (32-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 191, 3, 32, "Input"],
Cell[752, 25, 128, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[905, 31, 2613, 62, 187, "Input"],
Cell[3521, 95, 1075, 15, 32, "Output"],
Cell[4599, 112, 13426, 229, 233, "Output"],
Cell[18028, 343, 1075, 15, 32, "Output"],
Cell[19106, 360, 1076, 15, 32, "Output"],
Cell[20185, 377, 1116, 16, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21338, 398, 1041, 25, 55, "Input"],
Cell[22382, 425, 14593, 248, 349, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37012, 678, 154, 2, 47, "Subsection"],
Cell[CellGroupData[{
Cell[37191, 684, 1295, 34, 143, "Input"],
Cell[38489, 720, 644, 13, 41, "Message"],
Cell[39136, 735, 393, 9, 32, "Output"],
Cell[39532, 746, 644, 13, 41, "Message"],
Cell[40179, 761, 392, 9, 32, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
